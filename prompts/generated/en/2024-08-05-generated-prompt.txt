Given the functions:
{
    "functions": [
        {
            "name": "create_packaging_line",
            "description": "Creates a new instance of a packaging line.",
            "arguments": [
                {
                    "name": "n",
                    "description": "Amount of sub-machines to add to the packaging line.",
                    "type": "number"
                }
            ],
            "returns": {
                "description": "Instance of the packaging line.",
                "type": "PackagingLine"
            }
        },
        {
            "name": "add_conveyor_belt",
            "description": "This method of the PackagingLine type adds a conveyor belt to the packaging line. The convery belt runs through the machines, giving all machines access to the contents of the conveyor belt. Sub-machines are zero-index from left to right.",
            "arguments": [
                {
                    "name": "beginning",
                    "description": "Index of the first sub-machine to connect the conveyor belt to.",
                    "type": "number"
                },
                {
                    "name": "end",
                    "description": "Index of the last sub-machine to connect the conveyor belt to.",
                    "type": "number"
                }
            ],
            "returns": {
                "description": "The result of subtracting the second number from the first.",
                "type": "number"
            }
        },
        {
            "name": "add_packaging_robot",
            "description": "This method of the SubMachine type adds a packaging robot to the sub-machine.",
            "arguments": [
                {
                    "name": "machine_type",
                    "description": "Type of the packaging machine to add.",
                    "type": "string"
                }
            ],
            "returns": "void"
        },
        {
            "name": "attach_funnel",
            "description": "This method of the SubMachine type attaches a funnel to the sub-machine. The method checks if a funnel is already attached to the sub-machine. If a funnel is already attached, the mothod returns false, otherwise true.",
            "returns": "bool"
        }
    ]
}

and the types:
{
    "types": {
        "PackagingLine": {
            "description": "A class that represents a packaging line.",
            "properties": {
                "SubMachines": {
                    "description": "Array of packaging machines in the packaging line.",
                    "type": "Array<SubMachines>"
                },
                "ConveyorBelts": {
                    "description": "Array of conveyor belts in the packaging line.",
                    "type": "Array<ConveyorBelt>"
                }
            }
        },
        "SubMachine": {
            "description": "A class that represents a sub-machine in a packaging line.",
            "properties": {
                "PackagingRobots": {
                    "description": "Array of packaging machines in the sub-machine.",
                    "type": "Array<PackagingRobot>"
                },
                "Funnel": {
                    "description": "Boolean value that indicates if a funnel is attached to the sub-machine.",
                    "type": "bool"
                }
            }
        },
        "PackagingRobot": {
            "description": "A class that represents a packaging robot in a sub-machine.",
            "properties": {
                "type": {
                    "description": "Type of the packaging machine.",
                    "type": "string"
                }
            }
        },
        "ConveyorBelt": {
            "description": "A class that represents a conveyor belt in a packaging line.",
            "properties": {
                "beginning": {
                    "description": "Index of the first sub-machine the conveyor belt is connected to.",
                    "type": "number"
                },
                "end": {
                    "description": "Index of the last sub-machine the conveyor belt is connected to.",
                    "type": "number"
                }
            }
        }
    }
}

Write a python script that uses the given function and types that instanciates a PackagingLine with enough capacity to package all cookies. There is a total 400 cookies arraving at the machine. One funnel can deliver 100 cookies. The cookies can be picked up by a "picker" but only if the converyer belt was previously scanned by a "scanner". The PackagingLine is supposed to place a cookies in one tray, which needs to move through the machine too. Use the minimal amount of machines necessary.